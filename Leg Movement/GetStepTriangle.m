%% get the positions of the triangle center generated by the leg tripod in stance
function [TrSt, TrSw, indSt1, indSt2] = GetStepTriangle(FLLY, FRLY, MLLY, MRLY, HLLY, HRLY, ...
    FLLX, FRLX, MLLX, MRLX, HLLX, HRLX, ThX, ThY)
indSt1 = [];
indSt2 = [];
if ~isempty(FLLY)
    % get the swing and stance movements for all the 6 legs
    indsStace = cell(6,1);
    indsSwing = cell(6,1);
    [indsStace{1}, indsSwing{1}] = GetLegMovStepPars(FLLY);
    [indsStace{2}, indsSwing{2}] = GetLegMovStepPars(FRLY);
    [indsStace{3}, indsSwing{3}] = GetLegMovStepPars(MLLY);
    [indsStace{4}, indsSwing{4}] = GetLegMovStepPars(MRLY);
    [indsStace{5}, indsSwing{5}] = GetLegMovStepPars(HLLY);
    [indsStace{6}, indsSwing{6}] = GetLegMovStepPars(HRLY);
    
    % number detected high quality steps
    ll = zeros(6,1);
    for j = 1 : 6
        ll(j) = length(indsStace{j});
    end
    T1 = [1 4 5];
    T2 = [2 3 6];
    [~,It1] = min(ll(T1));
    [~,It2] = min(ll(T2));
    
    % detect stance triangles
    TrSt1Y = [];
    TrSt1X = [];
    cTrSt1Y = [];
    cTrSt1X = [];
    cFSt1Y = [];
    cFSt1X = [];
    indSt1 = nan*zeros(ll(T1(It1)),1);
    for j = 1 : ll(T1(It1))
        ii = indsStace{T1(It1)}(j);
        st1 = find(abs(indsStace{T1(1)}-ii) <= 2, 1);
        st2 = find(abs(indsStace{T1(2)}-ii) <= 2, 1);
        st3 = find(abs(indsStace{T1(3)}-ii) <= 2, 1);
        if ~isempty(st1) && ~isempty(st2) && ~isempty(st3)
            TrSt1Y = horzcat(TrSt1Y, vertcat(FLLY(indsStace{1}(st1)), ...
                MRLY(indsStace{4}(st2)), HLLY(indsStace{5}(st3))));
            TrSt1X = horzcat(TrSt1X, vertcat(FLLX(indsStace{1}(st1)), ...
                MRLX(indsStace{4}(st2)), HLLX(indsStace{5}(st3))));
            cFSt1X = horzcat(cFSt1X, ThX(indsStace{1}(st1)));
            cFSt1Y = horzcat(cFSt1Y, ThY(indsStace{1}(st1)));
            cTrSt1Y = horzcat(cTrSt1Y, mean([FLLY(indsStace{1}(st1)) ...
                MRLY(indsStace{4}(st2)) HLLY(indsStace{5}(st3))]) - ThY(indsStace{1}(st1)));
            cTrSt1X = horzcat(cTrSt1X, mean([FLLX(indsStace{1}(st1)) ...
                MRLX(indsStace{4}(st2)) HLLX(indsStace{5}(st3))]) - ThX(indsStace{1}(st1)));
            indSt1(j) = ii;
        else
            TrSt1Y = horzcat(TrSt1Y, vertcat(0, 0, 0));
            TrSt1X = horzcat(TrSt1X, vertcat(0, 0, 0));
            cFSt1X = horzcat(cFSt1X, 0);
            cFSt1Y = horzcat(cFSt1Y, 0);
            cTrSt1Y = horzcat(cTrSt1Y, 0);
            cTrSt1X = horzcat(cTrSt1X, 0);
        end
    end
    TrSt2Y = [];
    TrSt2X = [];
    cTrSt2Y = [];
    cTrSt2X = [];
    cFSt2Y = [];
    cFSt2X = [];
    indSt2 = nan*zeros(ll(T2(It2)),1);
    for j = 1 : ll(T2(It2))
        ii = indsStace{T2(It2)}(j);
        st1 = find(abs(indsStace{T2(1)}-ii) <= 2, 1);
        st2 = find(abs(indsStace{T2(2)}-ii) <= 2, 1);
        st3 = find(abs(indsStace{T2(3)}-ii) <= 2, 1);
        if ~isempty(st1) && ~isempty(st2) && ~isempty(st3)
            TrSt2Y = horzcat(TrSt2Y, vertcat(FRLY(indsStace{2}(st1)), ...
                MLLY(indsStace{3}(st2)), HRLY(indsStace{6}(st3))));
            TrSt2X = horzcat(TrSt2X, vertcat(FRLX(indsStace{2}(st1)), ...
                MLLX(indsStace{3}(st2)), HRLX(indsStace{6}(st3))));
            cFSt2X = horzcat(cFSt2X, ThX(indsStace{2}(st1)));
            cFSt2Y = horzcat(cFSt2Y, ThY(indsStace{2}(st1)));
            cTrSt2Y = horzcat(cTrSt2Y, mean([FRLY(indsStace{2}(st1)) ...
                MLLY(indsStace{3}(st2)) HRLY(indsStace{6}(st3))]) - ThY(indsStace{2}(st1)));
            cTrSt2X = horzcat(cTrSt2X, mean([FRLX(indsStace{2}(st1)) ...
                MLLX(indsStace{3}(st2)) HRLX(indsStace{6}(st3))]) - ThX(indsStace{2}(st1)));
            indSt2(j) = ii;
        else
            TrSt2Y = horzcat(TrSt2Y, vertcat(0, 0, 0));
            TrSt2X = horzcat(TrSt2X, vertcat(0, 0, 0));
            cFSt2X = horzcat(cFSt2X, 0);
            cFSt2Y = horzcat(cFSt2Y, 0);
            cTrSt2Y = horzcat(cTrSt2Y, 0);
            cTrSt2X = horzcat(cTrSt2X, 0);
        end
    end
    
    % detect swing triangles
    TrSw1Y = [];
    TrSw1X = [];
    cTrSw1Y = [];
    cTrSw1X = [];
    cFSw1Y = [];
    cFSw1X = [];
    indSw1 = zeros(ll(T1(It1)),1);
    for j = 1 : ll(T1(It1))
        ii = indsSwing{T1(It1)}(j);
        st1 = find(abs(indsSwing{T1(1)}-ii) <= 1, 1);
        st2 = find(abs(indsSwing{T1(2)}-ii) <= 1, 1);
        st3 = find(abs(indsSwing{T1(3)}-ii) <= 1, 1);
        if ~isempty(st1) && ~isempty(st2) && ~isempty(st3)
            TrSw1Y = horzcat(TrSw1Y, vertcat(FLLY(indsSwing{1}(st1)), ...
                MRLY(indsSwing{4}(st2)), HLLY(indsSwing{5}(st3))));
            TrSw1X = horzcat(TrSw1X, vertcat(FLLX(indsSwing{1}(st1)), ...
                MRLX(indsSwing{4}(st2)), HLLX(indsSwing{5}(st3))));
            cFSw1X = horzcat(cFSw1X, ThX(indsSwing{1}(st1)));
            cFSw1Y = horzcat(cFSw1Y, ThY(indsSwing{1}(st1)));
            cTrSw1Y = horzcat(cTrSw1Y, mean([FLLY(indsSwing{1}(st1)) ...
                MRLY(indsSwing{4}(st2)) HLLY(indsSwing{5}(st3))]) - ThY(indsSwing{1}(st1)));
            cTrSw1X = horzcat(cTrSw1X, mean([FLLX(indsSwing{1}(st1)) ...
                MRLX(indsSwing{4}(st2)) HLLX(indsSwing{5}(st3))]) - ThX(indsSwing{1}(st1)));
            indSw1(j) = ii;
        else
            TrSw1Y = horzcat(TrSw1Y, vertcat(0, 0, 0));
            TrSw1X = horzcat(TrSw1X, vertcat(0, 0, 0));
            cFSw1X = horzcat(cFSw1X, 0);
            cFSw1Y = horzcat(cFSw1Y, 0);
            cTrSw1Y = horzcat(cTrSw1Y, 0);
            cTrSw1X = horzcat(cTrSw1X, 0);
        end
    end
    
    TrSw2Y = [];
    TrSw2X = [];
    cTrSw2Y = [];
    cTrSw2X = [];
    cFSw2Y = [];
    cFSw2X = [];
    indSw2 = zeros(ll(T2(It2)),1);
    for j = 1 : ll(T2(It2))
        ii = indsSwing{T2(It2)}(j);
        st1 = find(abs(indsSwing{T2(1)}-ii) <= 1, 1);
        st2 = find(abs(indsSwing{T2(2)}-ii) <= 1, 1);
        st3 = find(abs(indsSwing{T2(3)}-ii) <= 1, 1);
        if ~isempty(st1) && ~isempty(st2) && ~isempty(st3)
            TrSw2Y = horzcat(TrSw2Y, vertcat(FRLY(indsSwing{2}(st1)), ...
                MLLY(indsSwing{3}(st2)), HRLY(indsSwing{6}(st3))));
            TrSw2X = horzcat(TrSw2X, vertcat(FRLX(indsSwing{2}(st1)), ...
                MLLX(indsSwing{3}(st2)), HRLX(indsSwing{6}(st3))));
            cFSw2X = horzcat(cFSw2X, ThX(indsSwing{2}(st1)));
            cFSw2Y = horzcat(cFSw2Y, ThY(indsSwing{2}(st1)));
            cTrSw2Y = horzcat(cTrSw2Y, mean([FRLY(indsSwing{2}(st1)) ...
                MLLY(indsSwing{3}(st2)) HRLY(indsSwing{6}(st3))]) - ThY(indsSwing{2}(st1)));
            cTrSw2X = horzcat(cTrSw2X, mean([FRLX(indsSwing{2}(st1)) ...
                MLLX(indsSwing{3}(st2)) HRLX(indsSwing{6}(st3))]) - ThX(indsSwing{2}(st1)));
            indSw2(j) =ii;
        else
            TrSw2Y = horzcat(TrSw2Y, vertcat(0, 0, 0));
            TrSw2X = horzcat(TrSw2X, vertcat(0, 0, 0));
            cFSw2X = horzcat(cFSw2X, 0);
            cFSw2Y = horzcat(cFSw2Y, 0);
            cTrSw2Y = horzcat(cTrSw2Y, 0);
            cTrSw2X = horzcat(cTrSw2X, 0);
        end
    end
    
    TrSt.Tr1X = TrSt1X;
    TrSt.Tr1Y = TrSt1Y;
    TrSt.Tr2X = TrSt2X;
    TrSt.Tr2Y = TrSt2Y;
    TrSt.cF1X = cFSt1X;
    TrSt.cF1Y = cFSt1Y;
    TrSt.cF2X = cFSt2X;
    TrSt.cF2Y = cFSt2Y;
    TrSt.cTr1X = cTrSt1X;
    TrSt.cTr1Y = cTrSt1Y;
    TrSt.cTr2X = cTrSt2X;
    TrSt.cTr2Y = cTrSt2Y;
    
    TrSw.Tr1X = TrSw1X;
    TrSw.Tr1Y = TrSw1Y;
    TrSw.Tr2X = TrSw2X;
    TrSw.Tr2Y = TrSw2Y;
    TrSw.cF1X = cFSw1X;
    TrSw.cF1Y = cFSw1Y;
    TrSw.cF2X = cFSw2X;
    TrSw.cF2Y = cFSw2Y;
    TrSw.cTr1X = cTrSw1X;
    TrSw.cTr1Y = cTrSw1Y;
    TrSw.cTr2X = cTrSw2X;
    TrSw.cTr2Y = cTrSw2Y;
else
    TrSt.Tr1X = [];
    TrSt.Tr1Y = [];
    TrSt.Tr2X = [];
    TrSt.Tr2Y = [];
    TrSt.cTr1X = [];
    TrSt.cTr1Y = [];
    TrSt.cTr2X = [];
    TrSt.cTr2Y = [];
    TrSt.cF1X = [];
    TrSt.cF1Y = [];
    TrSt.cF2X = [];
    TrSt.cF2Y = [];
    
    TrSw.Tr1X = [];
    TrSw.Tr1Y = [];
    TrSw.Tr2X = [];
    TrSw.Tr2Y = [];
    TrSw.cF1X = [];
    TrSw.cF1Y = [];
    TrSw.cF2X = [];
    TrSw.cF2Y = [];
    TrSw.cTr1X = [];
    TrSw.cTr1Y = [];
    TrSw.cTr2X = [];
    TrSw.cTr2Y = [];
end

end